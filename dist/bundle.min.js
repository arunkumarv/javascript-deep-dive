(function () {
    'use strict';

    var WatchDog = /** @class */ (function () {
        function WatchDog(value) {
            this.callbacks = [];
            this.value = value;
        }
        WatchDog.prototype.update = function (value) {
            var _this = this;
            this.value = value;
            this.callbacks.forEach(function (obj) { return obj.callback(_this.value); });
        };
        WatchDog.prototype.subscribe = function (callback) {
            var key = new Date().getTime();
            this.callbacks.push({ key: key, callback: callback });
            return key;
        };
        WatchDog.prototype.unsubscribe = function (key) {
            this.callbacks.splice(this.callbacks.findIndex(function (item) { return item.key === key; }), 1);
        };
        return WatchDog;
    }());

    var element = new WatchDog(20);
    var subscription = element.subscribe(function (newValue) {
        console.log("newValue: ", newValue);
    });
    element.update(30);
    element.update(50);
    element.unsubscribe(subscription);
    element.update(40);

})();
